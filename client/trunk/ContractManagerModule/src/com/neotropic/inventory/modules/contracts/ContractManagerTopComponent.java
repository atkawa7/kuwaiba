/*
 *  Copyright 2010-2016 Neotropic SAS <contact@neotropic.co>.
 *
 *  Licensed under the EPL License, Version 1.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.eclipse.org/legal/epl-v10.html
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package com.neotropic.inventory.modules.contracts;

import com.neotropic.inventory.modules.contracts.nodes.ContractManagerRootNode;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.ExplorerUtils;
import org.openide.explorer.view.BeanTreeView;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Main top component for the COntract Manager Module
 */
@ConvertAsProperties(
        dtd = "-//com.neotropic.inventory.modules.contracts//ContractManager//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "ContractManagerTopComponent",
        iconBase = "com/neotropic/inventory/modules/contracts/res/icon.png",
        persistenceType = TopComponent.PERSISTENCE_NEVER
)
@TopComponent.Registration(mode = "explorer", openAtStartup = false)
@ActionID(category = "Window", id = "com.neotropic.inventory.modules.contracts.ContractManagerTopComponent")
@ActionReference(path = "Menu/Tools/Commercial" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_ContractManagerAction",
        preferredID = "ContractManagerTopComponent"
)
@Messages({
    "CTL_ContractManagerAction=ContractManager",
    "CTL_ContractManagerTopComponent=ContractManager Window",
    "HINT_ContractManagerTopComponent=This is a ContractManager window"
})
public final class ContractManagerTopComponent extends TopComponent implements ExplorerManager.Provider {
    
    private BeanTreeView treeMain;
    private ExplorerManager em;
    
    public ContractManagerTopComponent() {
        em = new ExplorerManager();
        initComponents();
        initCustomComponents();
        setName(Bundle.CTL_ContractManagerTopComponent());
        setToolTipText(Bundle.HINT_ContractManagerTopComponent());

    }
    
    public void initCustomComponents() {
        treeMain = new BeanTreeView();
        pnlScrollMain.setViewportView(treeMain);
        associateLookup(ExplorerUtils.createLookup(em, getActionMap()));
        em.setRootContext(new ContractManagerRootNode(new ContractManagerRootNode.ContractManagerRootChildren()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlScrollMain = new javax.swing.JScrollPane();

        setLayout(new java.awt.BorderLayout());
        add(pnlScrollMain, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane pnlScrollMain;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public ExplorerManager getExplorerManager() {
        return em;
    }
}
