/*
 * Copyright (c) 2016 gir.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    gir - initial API and implementation and/or initial documentation
 */
package com.neotropic.inventory.modules.contracts;

import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.neotropic.inventory.modules.contracts//ContactManager//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "ContactManagerTopComponent",
        iconBase = "com/neotropic/inventory/modules/contracts/res/icon.png",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "explorer", openAtStartup = false)
@ActionID(category = "Window", id = "com.neotropic.inventory.modules.contracts.ContactManagerTopComponent")
@ActionReference(path = "Menu/Tools/Commercial" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_ContactManagerAction",
        preferredID = "ContactManagerTopComponent"
)
@Messages({
    "CTL_ContactManagerAction=ContactManager",
    "CTL_ContactManagerTopComponent=ContactManager Window",
    "HINT_ContactManagerTopComponent=This is a ContactManager window"
})
public final class ContactManagerTopComponent extends TopComponent {

    public ContactManagerTopComponent() {
        initComponents();
        setName(Bundle.CTL_ContactManagerTopComponent());
        setToolTipText(Bundle.HINT_ContactManagerTopComponent());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlScrollMain = new javax.swing.JScrollPane();

        setLayout(new java.awt.BorderLayout());
        add(pnlScrollMain, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane pnlScrollMain;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
