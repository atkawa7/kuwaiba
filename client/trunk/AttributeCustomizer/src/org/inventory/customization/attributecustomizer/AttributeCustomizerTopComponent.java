/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.inventory.customization.attributecustomizer;

import org.inventory.customization.attributecustomizer.nodes.ClassMetadataChildren;
import java.awt.BorderLayout;
import java.util.logging.Logger;
import org.inventory.communications.CommunicationsStub;
import org.inventory.core.services.interfaces.LocalClassMetadata;
import org.inventory.objectcache.Cache;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.openide.windows.WindowManager;
import org.openide.util.ImageUtilities;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.view.TreeTableView;
import org.openide.nodes.AbstractNode;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//org.inventory.customization.attributecustomizer//AttributeCustomizer//EN",
autostore = false)
public final class AttributeCustomizerTopComponent extends TopComponent
                           implements ExplorerManager.Provider{

    private static AttributeCustomizerTopComponent instance;
    /** path to the icon used by the component and its open action */
    static final String ICON_PATH = "org/inventory/customization/attributecustomizer/res/3d.png";
    private static final String PREFERRED_ID = "AttributeCustomizerTopComponent";
    private CommunicationsStub com = CommunicationsStub.getInstance();
    private Cache cache;
    private ExplorerManager em = new ExplorerManager();

    public AttributeCustomizerTopComponent() {
        initComponents();
        setDisplayName("Editor de Atributos");
        setName(NbBundle.getMessage(AttributeCustomizerTopComponent.class, "CTL_AttributeCustomizerTopComponent"));
        setToolTipText(NbBundle.getMessage(AttributeCustomizerTopComponent.class, "HINT_AttributeCustomizerTopComponent"));
        setIcon(ImageUtilities.loadImage(ICON_PATH, true));
        initCustomComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlClassCustomizerMain = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        lblSearch = new javax.swing.JLabel();
        pnlTableEnclosing = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();

        txtSearch.setText(org.openide.util.NbBundle.getMessage(AttributeCustomizerTopComponent.class, "AttributeCustomizerTopComponent.txtSearch.text")); // NOI18N
        txtSearch.setToolTipText(org.openide.util.NbBundle.getMessage(AttributeCustomizerTopComponent.class, "AttributeCustomizerTopComponent.txtSearch.toolTipText")); // NOI18N
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(lblSearch, org.openide.util.NbBundle.getMessage(AttributeCustomizerTopComponent.class, "AttributeCustomizerTopComponent.lblSearch.text")); // NOI18N

        javax.swing.GroupLayout pnlTableEnclosingLayout = new javax.swing.GroupLayout(pnlTableEnclosing);
        pnlTableEnclosing.setLayout(pnlTableEnclosingLayout);
        pnlTableEnclosingLayout.setHorizontalGroup(
            pnlTableEnclosingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 531, Short.MAX_VALUE)
        );
        pnlTableEnclosingLayout.setVerticalGroup(
            pnlTableEnclosingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 302, Short.MAX_VALUE)
        );

        btnSave.setMnemonic('G');
        org.openide.awt.Mnemonics.setLocalizedText(btnSave, org.openide.util.NbBundle.getMessage(AttributeCustomizerTopComponent.class, "AttributeCustomizerTopComponent.btnSave.text")); // NOI18N

        javax.swing.GroupLayout pnlClassCustomizerMainLayout = new javax.swing.GroupLayout(pnlClassCustomizerMain);
        pnlClassCustomizerMain.setLayout(pnlClassCustomizerMainLayout);
        pnlClassCustomizerMainLayout.setHorizontalGroup(
            pnlClassCustomizerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClassCustomizerMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlClassCustomizerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTableEnclosing, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlClassCustomizerMainLayout.createSequentialGroup()
                        .addComponent(lblSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlClassCustomizerMainLayout.createSequentialGroup()
                        .addComponent(btnSave)
                        .addGap(20, 20, 20))))
        );
        pnlClassCustomizerMainLayout.setVerticalGroup(
            pnlClassCustomizerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClassCustomizerMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlClassCustomizerMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlTableEnclosing, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlClassCustomizerMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlClassCustomizerMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void initCustomComponents() {
        LocalClassMetadata[] allMeta = com.getAllMeta();

        em.setRootContext(new AbstractNode(new ClassMetadataChildren(allMeta)));

        tblClassCustomizerMain = new TreeTableView();
        tblClassCustomizerMain.setRootVisible(false);

        tblClassCustomizerMain.setProperties(em.getRootContext().getChildren().
                getNodes()[0].getChildren().getNodes()[0].getPropertySets()[0].
                getProperties());

        pnlTableEnclosing.setLayout(new BorderLayout());
        pnlTableEnclosing.add(tblClassCustomizerMain,BorderLayout.CENTER);
        
    }
    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JPanel pnlClassCustomizerMain;
    private javax.swing.JPanel pnlTableEnclosing;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
    private TreeTableView tblClassCustomizerMain;
    /**
     * Gets default instance. Do not use directly: reserved for *.settings files only,
     * i.e. deserialization routines; otherwise you could get a non-deserialized instance.
     * To obtain the singleton instance, use {@link #findInstance}.
     */
    public static synchronized AttributeCustomizerTopComponent getDefault() {
        if (instance == null) {
            instance = new AttributeCustomizerTopComponent();
        }
        return instance;
    }

    /**
     * Obtain the AttributeCustomizerTopComponent instance. Never call {@link #getDefault} directly!
     */
    public static synchronized AttributeCustomizerTopComponent findInstance() {
        TopComponent win = WindowManager.getDefault().findTopComponent(PREFERRED_ID);
        if (win == null) {
            Logger.getLogger(AttributeCustomizerTopComponent.class.getName()).warning(
                    "Cannot find " + PREFERRED_ID + " component. It will not be located properly in the window system.");
            return getDefault();
        }
        if (win instanceof AttributeCustomizerTopComponent) {
            return (AttributeCustomizerTopComponent) win;
        }
        Logger.getLogger(AttributeCustomizerTopComponent.class.getName()).warning(
                "There seem to be multiple components with the '" + PREFERRED_ID
                + "' ID. That is a potential source of errors and unexpected behavior.");
        return getDefault();
    }

    @Override
    public int getPersistenceType() {
        return TopComponent.PERSISTENCE_NEVER;
    }

    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    Object readProperties(java.util.Properties p) {
        if (instance == null) {
            instance = this;
        }
        instance.readPropertiesImpl(p);
        return instance;
    }

    private void readPropertiesImpl(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    protected String preferredID() {
        return PREFERRED_ID;
    }

    public ExplorerManager getExplorerManager() {
        return em;
    }
}
