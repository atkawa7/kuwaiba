/**
 * Copyright 2010-2016 Neotropic SAS <contact@neotropic.co>.
 * 
* Licensed under the EPL License, Version 1.0 (the "License"); you may not use
 * this file except in compliance with the License. You may obtain a copy of the
 * License at
 * 
* http://www.eclipse.org/legal/epl-v10.html
 * 
* Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package org.inventory.core.templates;

import org.inventory.core.services.api.behaviors.Refreshable;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.ExplorerUtils;
import org.openide.explorer.view.BeanTreeView;
import org.openide.nodes.Node;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Template Manager Top component.
 */
@ConvertAsProperties(
        dtd = "-//org.inventory.core.templates//Templates//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "TemplatesTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_NEVER
)
@TopComponent.Registration(mode = "explorer", openAtStartup = false)
@ActionID(category = "Window", id = "org.inventory.core.templates.TemplatesTopComponent")
@ActionReference(path = "Menu/Tools" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_TemplatesAction",
        preferredID = "TemplatesTopComponent"
)
@Messages({
    "CTL_TemplatesAction=Template Manager",
    "CTL_TemplatesTopComponent=Template Manager",
    "HINT_TemplatesTopComponent=Manage Object Templates with this module"
})
public final class TemplatesTopComponent extends TopComponent implements ExplorerManager.Provider, Refreshable {

    private ExplorerManager em;
    private BeanTreeView treeMain;
    private TemplatesService service;
    
    public TemplatesTopComponent() {
        initComponents();
        initCustomComponents();
        setName(Bundle.CTL_TemplatesTopComponent());
        setToolTipText(Bundle.HINT_TemplatesTopComponent());

    }

    private void initCustomComponents() {
        service = new TemplatesService(this);
        em = new ExplorerManager();
        associateLookup(ExplorerUtils.createLookup(em, getActionMap()));
        
        treeMain = new BeanTreeView();
        treeMain.setRootVisible(false);
        add(treeMain);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        service.setRoot();
    }

    @Override
    public void componentClosed() {
        em.setRootContext(Node.EMPTY);
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public ExplorerManager getExplorerManager() {
        return em;
    }

    @Override
    public void refresh() {
        componentClosed();
        componentOpened();
    }
}
